/*****************************************************************
 *	@file			SceneBase.h
 *	@brief			シーンベースクラス
 *	@author			井上颯騎
 *	@date			2019/07/12
 *****************************************************************/
#pragma once

/*****************************************************************
 *	@brief			シーンベースクラス
 *	@author			井上颯騎
 *****************************************************************/
class CSceneBase {
protected:

	//! シーン終了フラグ
	bool	m_bEnd;

	//! 次のシーン番号
	int		m_NextScene;

	//! 現在のシーン番号
	int		m_NowScene;

public:

	/*****************************************************************
	 * @fn
	 * 引数なしコンストラクタ
	 * @param なし
	 * @return なし
	 *****************************************************************/
	CSceneBase() :
		m_bEnd(false),
		m_NextScene(0) {}

	/*****************************************************************
	 * @fn
	 * デストラクタ
	 * @param なし
	 * @return なし
	 *****************************************************************/
	virtual ~CSceneBase() {};

	/*****************************************************************
	 * @fn
	 * シーンに必要な素材の読み込み
	 * @param なし
	 * @return なし
	 *****************************************************************/
	virtual void Load() = 0;

	/*****************************************************************
	 * @fn
	 * シーンの初期化
	 * @param なし
	 * @return なし
	 *****************************************************************/
	virtual void Initialize() = 0;

	/*****************************************************************
	 * @fn
	 * シーンの更新
	 * @param なし
	 * @return なし
	 *****************************************************************/
	virtual void Update() = 0;

	/*****************************************************************
	 * @fn
	 * シーンの描画
	 * @param なし
	 * @return なし
	 *****************************************************************/
	virtual void Render() = 0;

	/*****************************************************************
	 * @fn
	 * シーンのデバッグ用描画
	 * @param なし
	 * @return なし
	 *****************************************************************/
	virtual void RenderDebug() = 0;

	/*****************************************************************
	 * @fn
	 * シーンの解放
	 * @param なし
	 * @return なし
	 *****************************************************************/
	virtual void Release() = 0;

	/*****************************************************************
	 * @fn
	 * 次のシーン番号取得
	 * @param なし
	 * @return 次のシーン番号
	 *****************************************************************/
	int			 GetNextScene() { return m_NextScene; }

	/*****************************************************************
	 * @fn
	 * 現在のシーン番号取得
	 * @param なし
	 * @return 現在のシーン番号
	 *****************************************************************/
	int			 GetNowScene() { return m_NowScene; }

	/*****************************************************************
	 * @fn
	 * シーン終了フラグ取得
	 * @param なし
	 * @return シーン終了フラグ
	 *****************************************************************/
	bool		 IsEnd() { return m_bEnd; }
};